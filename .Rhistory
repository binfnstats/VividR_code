getwd()
package.skeleton(name = "VIVID")
library(VIVID)
library(ropls)
library(caret)
library(parallel)
library(glmnet)
library(pROC)
library(randomForest)
library(e1071)
library(tidyverse)
library(reshape2)
library(xgboost)
#sacurine
data(sacurine)
x <- sacurine$dataMatrix
y <- sacurine$sampleMetadata$gender
vivid.test = vivid(x, y)
saveRDS(vivid.test$varMat, file = "matrix_test.rds")
vivid.test$varClust
dendsort(vivid.test$varClust)
vivid.test$varClust
vivid.test$varClust$order
saveRDS(vivid.test$varClust$order, file = "order_test.rds")
saveRDS(dendsort::dendsort(d = vividObj$varClust)$order, file = "order_test.rds")
saveRDS(dendsort::dendsort(d = vivid.test$varClust)$order, file = "order_test.rds")
dendsort::dendsort(d = vivid.test$varClust)$order
?str_trunc
saveRDS(vivid.test$sizes, file = "size_test.rds")
saveRDS(vivid.test, file = "vivd_test.rds")
saveRDS(vivid.test, file = "vivid_test.rds")
library(VIVID)
library(VIVID)
install.packages('latticeExtra') #required for visualisation
install.packages('tidyverse')
install.packages('furrr') #required for parrallel processing
install.packages('glmnet')
install.packages('parallel')
install.packages('future')
install.packages('dendsort')
install.packages("furrr")
install.packages("parallel")
install.packages("future")
install.packages('stringr')
install.packages("parallel")
install.packages("future")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ropls") #sacurine data
library('latticeExtra')
library('tidyverse')
library('furrr')
library('glmnet')
library('ropls')
library('parallel')
library('future')
library('dendsort')
library('stringr')
library(VIVID)
data("sacurine")
dat <- sacurine$dataMatrix
outcomes <- sacurine$sampleMetadata$gender
p <- NCOL(dat) # p = 109
p
vivid.sacurine <- vivid(x = dat,
y = outcomes,
bootstraps = 75,
cores = detectCores() - 1,
seed = 1234567,
lambda = 'lambda.min',
compare_method = 'BIC')
vivid.sacurine <- vivid(x = dat,
y = outcomes,
bootstraps = 75,
cores = detectCores() - 1,
seed = 1234567,
lambda = 'lambda.min',
compareMethod = 'BIC')
vivid.sacurine$varClust
vivid.sacurine$selection
vivid.sacurine$sizes
vivid.sacurine$compareMethod
vivid.sacurine$compareValues
vivid.sacurine$optFeatures
# Minimum number of final features set to 10
vivid_adj(vivid.sacurine,
min_final_features = 10)
# Minimum number of final features set to 10
vivid_adj(vivid.sacurine,
minFinalFeatures = 10)
?vivid_crit
# Change from BIC to AIC
vivid.saccurinenew <- vivid_crit(vivid.sacurine,
x = dat,
y = outcomes,
metric = "AIC")
getwd()
library(VIVID)
library('ropls')
data("saccurine")
data("sacurine")
?sacurine
saveRDS(sacurine, "sacurine.rds")
vivid.sacurine_split <- vivid_split(x = dat,
y = outcomes,
bootstraps = 75,
cores = detectCores() - 1,
seed = 1234567,
lambda = 'lambda.min',
compareMethod = 'BIC',
groups = 5,
disjoint = TRUE)
